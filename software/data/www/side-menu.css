body {
    color: #02b597;
    background-color: black;
    font-family: "Kernel","Courier New";
    font-size: 14px;
}

.pure-img-responsive {
    max-width: 100%;
    height: auto;
}

@font-face {
font-family: "Kernel";
src: url("fonts/KERNEL1.ttf") format("opentype");
}

@font-face {
font-family: "Code Hack";
src: url("fonts/glitch.otf") format("opentype");
}

@font-face {
font-family: "Halogen";
src: url("fonts/halogen.otf") format("opentype");
}



/*
Add transition to containers so they can push in and out.
*/
#layout,
#menu,
.menu-link {
    -webkit-transition: all 0.2s ease-out;
    -moz-transition: all 0.2s ease-out;
    -ms-transition: all 0.2s ease-out;
    -o-transition: all 0.2s ease-out;
    transition: all 0.2s ease-out;
}

/*
This is the parent `<div>` that contains the menu and the content area.
*/
#layout {
    position: relative;
    left: 0;
    padding-left: 0;
}
    #layout.active #menu {
        left: 150px;
        width: 150px;
    }

    #layout.active .menu-link {
        left: 150px;
    }
/*
The content `<div>` is where all your content goes.
*/
.content {
    margin: 0 auto;
    padding: 0 2em;
    max-width: 1000px;
    margin-bottom: 50px;
    line-height: 1.6em;
    background-color: rgba(0, 0, 0, 0.45) !important;
    background-image: url("images/48HN.gif");
    background-blend-mode: color;
    background-repeat: no-repeat;
    background-position: center;
    height: 400px;
    margin-top: 10%;
}


.header {
     margin: 0;
     color: #05ffd5;
     text-align: center;
     padding: 2.5em 2em 0;
     border-bottom: 1px solid #05f528;
     background-image: url("images/W9Vo.gif");
     font-family: "Halogen","Courier New";

 }
    .header h1 {
        margin: 0.2em 0;
        font-size: 3em;
        font-weight: 300;
    }
     .header h2 {
        font-weight: 300;
        color: #02b597;
        padding: 0;
        margin-top: 0;
    }

.content-subhead {
    margin: 50px 0 20px 0;
    font-weight: 300;
    color: #05ffd5;
}



/*
The `#menu` `<div>` is the parent `<div>` that contains the `.pure-menu` that
appears on the left side of the page.
*/

#menu {
    margin-left: -150px; /* "#menu" width */
    width: 150px;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1000; /* so the menu or its navicon stays above all content */
    background: #191818;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    background-image: url("images/Yed2.gif");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;

}
    /*
    All anchors inside the menu should be styled like this.
    */
    #menu a {
        color: #999;
        border: none;
        padding: 0.6em 0 0.6em 0.6em;
    }

    /*
    Remove all background/borders, since we are applying them to #menu.
    */
     #menu .pure-menu,
     #menu .pure-menu ul {
        border: none;
        background: transparent;
    }

    /*
    Add that light border to separate items into groups.
    */
    #menu .pure-menu ul,
    #menu .pure-menu .menu-item-divided {
        border-top: 1px solid #333;
    }
        /*
        Change color of the anchor links on hover/focus.
        */
        #menu .pure-menu li a:hover,
        #menu .pure-menu li a:focus {
            background: #333;
        }

    /*
    This styles the selected menu item `<li>`.
    */
    #menu .pure-menu-selected,
    #menu .pure-menu-heading {
        background: #b903b8;
    }
        /*
        This styles a link within a selected menu item `<li>`.
        */
        #menu .pure-menu-selected a {
            color: #fff;
        }

    /*
    This styles the menu heading.
    */
    #menu .pure-menu-heading {
        font-size: 110%;
        color: #fff;
        margin: 0;
    }

/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menu-link {
    position: fixed;
    display: block; /* show this only on small screens */
    top: 0;
    left: 0; /* "#menu width" */
    background: #000;
    background: rgba(0,0,0,0.7);
    font-size: 10px; /* change this value to increase/decrease button size */
    z-index: 10;
    width: 2em;
    height: auto;
    padding: 2.1em 1.6em;
}

    .menu-link:hover,
    .menu-link:focus {
        background: #000;
    }

    .menu-link span {
        position: relative;
        display: block;
    }

    .menu-link span,
    .menu-link span:before,
    .menu-link span:after {
        background-color: #fff;
        width: 100%;
        height: 0.2em;
    }

        .menu-link span:before,
        .menu-link span:after {
            position: absolute;
            margin-top: -0.6em;
            content: " ";
        }

        .menu-link span:after {
            margin-top: 0.6em;
        }


/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

    .header,
    .content {
        padding-left: 2em;
        padding-right: 2em;
    }

    #layout {
        padding-left: 150px; /* left col width "#menu" */
        left: 0;
    }
    #menu {
        left: 150px;
    }

    .menu-link {
        position: fixed;
        left: 150px;
        display: none;
    }

    #layout.active .menu-link {
        left: 150px;
    }
}

@media (max-width: 48em) {
    /* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
    #layout.active {
        position: relative;
        left: 150px;
    }
}




#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(9px, 9999px, 18px, 0);
    transform: skew(0.59deg);
  }
  5% {
    clip: rect(6px, 9999px, 52px, 0);
    transform: skew(0.83deg);
  }
  10% {
    clip: rect(9px, 9999px, 76px, 0);
    transform: skew(0.93deg);
  }
  15% {
    clip: rect(1px, 9999px, 44px, 0);
    transform: skew(0.96deg);
  }
  20% {
    clip: rect(95px, 9999px, 27px, 0);
    transform: skew(0.07deg);
  }
  25% {
    clip: rect(8px, 9999px, 99px, 0);
    transform: skew(0.46deg);
  }
  30% {
    clip: rect(55px, 9999px, 6px, 0);
    transform: skew(0.16deg);
  }
  35% {
    clip: rect(48px, 9999px, 50px, 0);
    transform: skew(0.02deg);
  }
  40% {
    clip: rect(28px, 9999px, 3px, 0);
    transform: skew(0.04deg);
  }
  45% {
    clip: rect(74px, 9999px, 6px, 0);
    transform: skew(0.99deg);
  }
  50% {
    clip: rect(58px, 9999px, 15px, 0);
    transform: skew(0.51deg);
  }
  55% {
    clip: rect(90px, 9999px, 35px, 0);
    transform: skew(0.56deg);
  }
  60% {
    clip: rect(2px, 9999px, 38px, 0);
    transform: skew(0.24deg);
  }
  65% {
    clip: rect(38px, 9999px, 99px, 0);
    transform: skew(0.1deg);
  }
  70% {
    clip: rect(36px, 9999px, 65px, 0);
    transform: skew(0.49deg);
  }
  75% {
    clip: rect(16px, 9999px, 30px, 0);
    transform: skew(0.34deg);
  }
  80% {
    clip: rect(3px, 9999px, 96px, 0);
    transform: skew(0.75deg);
  }
  85% {
    clip: rect(25px, 9999px, 11px, 0);
    transform: skew(0.3deg);
  }
  90% {
    clip: rect(52px, 9999px, 78px, 0);
    transform: skew(0.51deg);
  }
  95% {
    clip: rect(25px, 9999px, 35px, 0);
    transform: skew(0.51deg);
  }
  100% {
    clip: rect(48px, 9999px, 94px, 0);
    transform: skew(0.79deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(32px, 9999px, 69px, 0);
    transform: skew(0.3deg);
  }
  5% {
    clip: rect(53px, 9999px, 50px, 0);
    transform: skew(0.54deg);
  }
  10% {
    clip: rect(46px, 9999px, 46px, 0);
    transform: skew(0.39deg);
  }
  15% {
    clip: rect(79px, 9999px, 74px, 0);
    transform: skew(0.04deg);
  }
  20% {
    clip: rect(90px, 9999px, 95px, 0);
    transform: skew(0.27deg);
  }
  25% {
    clip: rect(41px, 9999px, 2px, 0);
    transform: skew(0.88deg);
  }
  30% {
    clip: rect(36px, 9999px, 64px, 0);
    transform: skew(0.07deg);
  }
  35% {
    clip: rect(69px, 9999px, 85px, 0);
    transform: skew(0.41deg);
  }
  40% {
    clip: rect(32px, 9999px, 42px, 0);
    transform: skew(0.75deg);
  }
  45% {
    clip: rect(55px, 9999px, 50px, 0);
    transform: skew(0.03deg);
  }
  50% {
    clip: rect(10px, 9999px, 80px, 0);
    transform: skew(0.56deg);
  }
  55% {
    clip: rect(75px, 9999px, 56px, 0);
    transform: skew(0.36deg);
  }
  60% {
    clip: rect(1px, 9999px, 78px, 0);
    transform: skew(0.97deg);
  }
  65% {
    clip: rect(87px, 9999px, 39px, 0);
    transform: skew(0.37deg);
  }
  70% {
    clip: rect(47px, 9999px, 73px, 0);
    transform: skew(0.91deg);
  }
  75% {
    clip: rect(70px, 9999px, 98px, 0);
    transform: skew(0.04deg);
  }
  80% {
    clip: rect(81px, 9999px, 48px, 0);
    transform: skew(0.67deg);
  }
  85% {
    clip: rect(28px, 9999px, 1px, 0);
    transform: skew(0.1deg);
  }
  90% {
    clip: rect(27px, 9999px, 27px, 0);
    transform: skew(0.24deg);
  }
  95% {
    clip: rect(1px, 9999px, 77px, 0);
    transform: skew(0.09deg);
  }
  100% {
    clip: rect(47px, 9999px, 42px, 0);
    transform: skew(0.51deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  10% {
    transform: skew(2deg);
  }
  20% {
    transform: skew(-1deg);
  }
  30% {
    transform: skew(-4deg);
  }
  40% {
    transform: skew(3deg);
  }
  50% {
    transform: skew(1deg);
  }
  60% {
    transform: skew(0deg);
  }
  70% {
    transform: skew(-2deg);
  }
  80% {
    transform: skew(2deg);
  }
  90% {
    transform: skew(-3deg);
  }
  100% {
    transform: skew(1deg);
  }
}



